name: Build Upstream Docker Image

on:
  workflow_call:
    inputs:
      platforms:
        type: string
        default: linux/amd64,linux/arm64
      upstream_version:
        required: true
        type: string
      upstream_repo:
        required: true
        type: string
      run_number:
        required: true
        type: string
      username:
        required: true
        type: string
      repository:
        required: true
        type: string
      checkout_upstream_repo:
        required: false
        type: string
        default: "false"
      dockerfile:
        type: string
        description: "Path to the Dockerfile"
        required: false
      target:
        type: string
        required: false
jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        if: ${{ inputs.checkout_upstream_repo == 'false' }}
        uses: actions/checkout@v4

      - name: Checkout repository
        if: ${{ inputs.checkout_upstream_repo != 'false' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.checkout_upstream_repo }}
          ref: ${{ inputs.upstream_version }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ inputs.username }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: "ghcr.io/${{ inputs.repository }}"
          labels: |
            org.opencontainers.image.source=${{ inputs.upstream_repo }}
            org.opencontainers.image.url=${{ inputs.upstream_repo }}
            org.opencontainers.image.revision=${{inputs.upstream_version}}
            org.opencontainers.image.version=${{inputs.upstream_version}}
          tags: |
            type=raw,value=${{inputs.upstream_version}}.${{ inputs.run_number }}
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Create tag
        uses: actions/github-script@v7
        env:
          UPSTREAM_VERSION: ${{ inputs.upstream_version }}
          RUN_NUMBER: ${{ inputs.run_NUMBER }}
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${process.env.UPSTREAM_VERSION}.${process.env.RUN_NUMBER}`,
              sha: context.sha
            })

      # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`. If the build succeeds, it pushes the image to GitHub Packages.
      # It uses the `context` parameter to define the build's context as the set of files located in the specified path. For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of the `docker/build-push-action` repository.
      # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ inputs.dockerfile }}
          target: ${{ inputs.target }}
          push: true
          build-args: |
            UPSTREAM_VERSION=${{ inputs.upstream_version }}
          platforms: "${{ inputs.platforms }}"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          make_latest: true
          generate_release_notes: true
          tag_name: "${{inputs.upstream_version}}.${{ inputs.run_number }}"
          name: "${{inputs.upstream_version}}.${{ inputs.run_number }}"
